{"version":3,"sources":["components/FamilyNode/FamilyNode.module.css","components/App/App.module.css","components/PinchZoomPan/PinchZoomPan.module.css","components/PinchZoomPan/PinchZoomPan.tsx","components/FamilyNode/FamilyNode.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","React","memo","min","max","captureWheel","className","style","children","root","useRef","useEffect","element","current","create","minZoom","maxZoom","ref","classNames","css","point","canvas","node","isRoot","onSubClick","styles","inner","gender","hasSubTree","sub","onClick","id","myID","rootId","setRootId","useState","onResetClick","useCallback","header","title","href","wrapper","nodes","width","height","tree","renderNode","key","transform","left","top","reset","ReactDOM","render","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,2BAA2B,IAAM,0B,gBCAlMD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,MAAQ,mBAAmB,QAAU,qBAAqB,KAAO,kBAAkB,MAAQ,qB,iBCAnKD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,OAAS,+B,+LCclFC,MAAMC,MACnB,YAA+E,IAAzD,IAAEC,EAAF,IAAOC,EAAP,aAAYC,EAAZ,UAA0BC,EAA1B,MAAqCC,EAArC,SAA4CC,GAAY,EAC5E,MAAMC,EAAOC,iBAAuB,MAQpC,OANAC,oBAAU,KACR,MAAMC,EAAUH,EAAKI,QACrB,GAAKD,EACL,OAAOE,YAAO,CAAEF,UAASG,QAASZ,EAAKa,QAASZ,EAAKC,kBACpD,CAACF,EAAKC,EAAKC,IAGZ,yBAAKY,IAAKR,EAAMH,UAAWY,IAAWZ,EAAWa,IAAIV,MAAOF,MAAOA,GACjE,yBAAKD,UAAWa,IAAIC,OAClB,yBAAKd,UAAWa,IAAIE,QACjBb,Q,gBCjBEP,MAAMC,MACnB,YAA0D,IAAtC,KAAEoB,EAAF,OAAQC,EAAR,WAAgBC,EAAhB,MAA4BjB,GAAS,EACvD,OACE,yBAAKD,UAAWmB,IAAOhB,KAAMF,MAAOA,GAClC,yBACED,UAAWY,IACTO,IAAOC,MACPD,IAAOH,EAAKK,QACZJ,GAAUE,IAAOF,UAGpBD,EAAKM,YACJ,yBACEtB,UAAWY,IAAWO,IAAOI,IAAKJ,IAAOH,EAAKK,SAC9CG,QAAS,IAAMN,EAAWF,EAAKS,U,gBCjB3C,MAAMC,EAAO,YAKE/B,UAAMC,MACnB,WACE,MAAO+B,EAAQC,GAAaC,mBAAiBH,GACvCI,EAAeC,sBAAY,IAAMH,EAAUF,GAAO,IAExD,OACE,yBAAK1B,UAAWmB,IAAOhB,MACrB,4BAAQH,UAAWmB,IAAOa,QACxB,wBAAIhC,UAAWmB,IAAOc,OAAtB,mBAGA,uBAAGC,KAAK,8DAAR,WAEF,kBAAC,EAAD,CACErC,IAAK,GACLC,IAAK,IACLC,cAAY,EACZC,UAAWmB,IAAOgB,SAElB,kBAAC,IAAD,CACEC,MAAOA,EACPT,OAAQA,EACRU,MAzBE,GA0BFC,OAzBG,GA0BHtC,UAAWmB,IAAOoB,KAClBC,WAAaxB,GACX,kBAAC,EAAD,CACEyB,IAAKzB,EAAKS,GACVT,KAAMA,EACNC,OAAQD,EAAKS,KAAOE,EACpBT,WAAYU,EACZ3B,MAAO,CACLoC,MAnCJ,GAoCIC,OAnCH,GAoCGI,UAAU,aAAD,OAAe,GAAA1B,EAAK2B,KAApB,eAA6C,GAAA3B,EAAK4B,IAAlD,aAMlBjB,IAAWD,GACV,yBAAK1B,UAAWmB,IAAO0B,MAAOrB,QAASM,GAAvC,aCjDVgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.40cbf6c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FamilyNode_root__1MX6K\",\"inner\":\"FamilyNode_inner__3gImM\",\"male\":\"FamilyNode_male__2W4NO\",\"female\":\"FamilyNode_female__3NgRT\",\"isRoot\":\"FamilyNode_isRoot__3viB_\",\"sub\":\"FamilyNode_sub__K8tlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1Jh3p\",\"header\":\"App_header__2MS2l\",\"title\":\"App_title__1YcTA\",\"wrapper\":\"App_wrapper__3ox-V\",\"tree\":\"App_tree__1-Ar8\",\"reset\":\"App_reset__2p6Ak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PinchZoomPan_root__9P_Qv\",\"point\":\"PinchZoomPan_point__2y-JG\",\"canvas\":\"PinchZoomPan_canvas__EVab0\"};","import React, { useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { create } from 'pinch-zoom-pan';\n\nimport css from './PinchZoomPan.module.css';\n\ninterface IProps {\n  min?: number;\n  max?: number;\n  captureWheel?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n}\n\nexport default React.memo<IProps>(\n  function PinchZoomPan({ min, max, captureWheel, className, style, children }) {\n    const root = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      const element = root.current;\n      if (!element) return;\n      return create({ element, minZoom: min, maxZoom: max, captureWheel });\n    }, [min, max, captureWheel]);\n\n    return (\n      <div ref={root} className={classNames(className, css.root)} style={style}>\n        <div className={css.point}>\n          <div className={css.canvas}>\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { IFamilyExtNode } from 'relatives-tree/lib/types';\nimport styles from './FamilyNode.module.css';\n\ninterface Props {\n  node: IFamilyExtNode;\n  isRoot: boolean;\n  onSubClick: (id: string) => void;\n  style?: React.CSSProperties;\n}\n\nexport default React.memo<Props>(\n  function FamilyNode({ node, isRoot, onSubClick, style }) {\n    return (\n      <div className={styles.root} style={style}>\n        <div\n          className={classNames(\n            styles.inner,\n            styles[node.gender],\n            isRoot && styles.isRoot,\n          )}\n        />\n        {node.hasSubTree && (\n          <div\n            className={classNames(styles.sub, styles[node.gender])}\n            onClick={() => onSubClick(node.id)}\n          />\n        )}\n      </div>\n    );\n  }\n);\n","import React, { useState, useCallback } from 'react';\nimport { IFamilyNode, IFamilyExtNode } from 'relatives-tree/lib/types';\nimport nodes from 'relatives-tree/samples/average-tree.json';\nimport ReactFamilyTree from 'react-family-tree';\nimport PinchZoomPan from '../PinchZoomPan/PinchZoomPan';\nimport FamilyNode from '../FamilyNode/FamilyNode';\n\nimport styles from './App.module.css';\n\nconst myID = 'kuVISwh7w';\n\nconst WIDTH = 70;\nconst HEIGHT = 80;\n\nexport default React.memo<{}>(\n  function App() {\n    const [rootId, setRootId] = useState<string>(myID);\n    const onResetClick = useCallback(() => setRootId(myID), []);\n\n    return (\n      <div className={styles.root}>\n        <header className={styles.header}>\n          <h1 className={styles.title}>\n            FamilyTree demo\n          </h1>\n          <a href=\"https://github.com/SanichKotikov/react-family-tree-example\">GitHub</a>\n        </header>\n        <PinchZoomPan\n          min={0.5}\n          max={2.5}\n          captureWheel\n          className={styles.wrapper}\n        >\n          <ReactFamilyTree\n            nodes={nodes as IFamilyNode[]}\n            rootId={rootId}\n            width={WIDTH}\n            height={HEIGHT}\n            className={styles.tree}\n            renderNode={(node: IFamilyExtNode) => (\n              <FamilyNode\n                key={node.id}\n                node={node}\n                isRoot={node.id === rootId}\n                onSubClick={setRootId}\n                style={{\n                  width: WIDTH,\n                  height: HEIGHT,\n                  transform: `translate(${node.left * (WIDTH / 2)}px, ${node.top * (HEIGHT / 2)}px)`,\n                }}\n              />\n            )}\n          />\n        </PinchZoomPan>\n        {rootId !== myID && (\n          <div className={styles.reset} onClick={onResetClick}>\n            Reset\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}